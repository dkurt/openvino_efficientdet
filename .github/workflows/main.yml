# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "00 7 * * 6"  # Run every saturday on 7:00 UTC

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  convert:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install Intel OpenVINO
      run: |
        sudo curl -o GPG-PUB-KEY-INTEL-OPENVINO-2021 https://apt.repos.intel.com/openvino/2021/GPG-PUB-KEY-INTEL-OPENVINO-2021
        sudo apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2021
        sudo echo "deb https://apt.repos.intel.com/openvino/2021 all main" | sudo tee - a /etc/apt/sources.list.d/intel-openvino-2021.list
        sudo apt update
        sudo apt install -y --no-install-recommends intel-openvino-dev-ubuntu18-2021.4.689
        #sudo apt install -y --no-install-recommends intel-openvino-dev-ubuntu18-2021.2.200
        sudo apt install -y --no-install-recommends python3-setuptools
        cd /opt/intel/openvino_2021/deployment_tools/model_optimizer/install_prerequisites
        sudo ./install_prerequisites.sh
        python3 -m pip freeze

    - name: Clone AutoML
      run: |
        git clone https://github.com/google/automl
        cd automl
        #git checkout 96e1fee        
        python3 -m pip install --upgrade pip
        python3 -m pip install numpy
        git log --pretty=oneline | head -25
        python3 -m pip install -r efficientdet/requirements.txt
        #python3 -m pip install tensorflow==2.4.3
        python3 -m pip install tensorflow-model-optimization
        python3 -m pip freeze

    - name: Download checkpoints
      run: |
        cd automl/efficientdet
        for version in d0 d4; do
          wget https://storage.googleapis.com/cloud-tpu-checkpoints/efficientdet/coco2/efficientdet-${version}.tar.gz
          tar -xf efficientdet-${version}.tar.gz
        done

    - name: Freeze graph
      run: |
        cd automl/efficientdet
        for version in d0 d4; do
          python3 model_inspect.py \
            --runmode=saved_model \
            --model_name=efficientdet-${version}  \
            --ckpt_path=efficientdet-${version} \
            --saved_model_dir=savedmodeldir-${version}
        done

    - name: Create IR
      run: |
        python3 -m pip install networkx defusedxml test-generator===0.1.1
        source /opt/intel/openvino_2021/bin/setupvars.sh
        export MO_DIR=/opt/intel/openvino_2021/deployment_tools/model_optimizer/

        versions=(d0 d4)
        sizes=(512 1024)
        for (( i=0; i<2; i++ )); do
          version=${versions[$i]}
          size=${sizes[$i]}

          python3 $MO_DIR/mo.py \
            --input_model automl/efficientdet/savedmodeldir-${version}/efficientdet-${version}_frozen.pb \
            --transformations_config $MO_DIR/extensions/front/tf/automl_efficientdet.json \
            --input_shape "[1, ${size}, ${size}, 3]" \
            --model_name efficientdet-${version} \
            --output_dir efficientdet-${version}-FP32 --data_type FP32

          python3 $MO_DIR/mo.py \
            --input_model automl/efficientdet/savedmodeldir-${version}/efficientdet-${version}_frozen.pb \
            --transformations_config $MO_DIR/extensions/front/tf/automl_efficientdet.json \
            --input_shape "[1, ${size}, ${size}, 3]" \
            --model_name efficientdet-${version} \
            --output_dir efficientdet-${version}-FP16 --data_type FP16

          (cd efficientdet-${version}-FP32 && \
            echo "-------- FP32 --------" && \
            python3 scripts/validate.py --version ${version} --width ${size} --height ${size})

          (cd efficientdet-${version}-FP16 && \
            echo "-------- FP16 --------" && \
            python3 scripts/validate.py --version ${version} --width ${size} --height ${size})
            
        done

    - uses: actions/upload-artifact@v2
      with:
        name: efficientdet-d0
        path: |
          efficientdet-d0-FP16/efficientdet-d0.bin
          efficientdet-d0-FP16/efficientdet-d0.xml
          efficientdet-d0-FP32/efficientdet-d0.xml
          efficientdet-d0-FP32/efficientdet-d0.xml

    - uses: actions/upload-artifact@v2
      with:
        name: efficientdet-d4
        path: |
          efficientdet-d4-FP16/efficientdet-d4.bin
          efficientdet-d4-FP16/efficientdet-d4.xml
          efficientdet-d4-FP32/efficientdet-d4.bin
          efficientdet-d4-FP32/efficientdet-d4.xml
