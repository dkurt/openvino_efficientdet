# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  convert:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install Intel OpenVINO
      run: |
        sudo curl -o GPG-PUB-KEY-INTEL-OPENVINO-2021 https://apt.repos.intel.com/openvino/2021/GPG-PUB-KEY-INTEL-OPENVINO-2021
        sudo apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2021
        sudo echo "deb https://apt.repos.intel.com/openvino/2021 all main" | sudo tee - a /etc/apt/sources.list.d/intel-openvino-2021.list
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends intel-openvino-dev-ubuntu18-2021.1.110
        sudo apt-get install -y --no-install-recommends python3-setuptools

    - name: Clone AutoML
      run: |
        git clone -b test https://github.com/fsx950223/automl --depth 1
        python3 -m pip install --upgrade pip
        python3 -m pip install numpy
        python3 -m pip install -r automl/efficientdet/requirements.txt

    - name: Clone OpenVINO
      run: |
        git clone -b enable_efficientdet https://github.com/lazarevevgeny/openvino --depth 1

    - name: Download checkpoints
      run: |
        cd automl/efficientdet
        wget https://storage.googleapis.com/cloud-tpu-checkpoints/efficientdet/coco2/efficientdet-d4.tar.gz
        tar -xf efficientdet-d4.tar.gz

    - name: Freeze graph
      run: |
        cd automl/efficientdet
        python3 model_inspect.py --runmode=saved_model --model_name=efficientdet-d4  --ckpt_path=efficientdet-d4 --saved_model_dir=savedmodeldir

    - name: Create IR
      run: |
        python3 -m pip install networkx defusedxml test-generator===0.1.1
        python3 openvino/model-optimizer/mo.py \
          --input_model automl/efficientdet/savedmodeldir/efficientdet-d4_frozen.pb \
          --transformations_config openvino/model-optimizer/extensions/front/tf/automl_efficientdet.json \
          --input_shape "[1, 1024, 1024, 3]" \
          --model_name efficientdet-d4

        source /opt/intel/openvino_2021/bin/setupvars.sh
        python3 scripts/validate.py --version d4 --width 1024 --height 1024

    - uses: actions/upload-artifact@v2
      with:
        name: efficientdet-d4
        path: |
          efficientdet-d4.bin
          efficientdet-d4.xml
